version: "3"
services:
  ####################### nginx #######################
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:rw
      - ./nginx/conf.d/:/etc/nginx/conf.d/:ro
      - ./nginx/log:/var/log/nginx:rw
      - ./nginx/cert/:/etc/nginx/cert/:rw
      - ./nginx/www/:/etc/nginx/www/:rw
    environment:
      - TZ=Asia/Shanghai

  ####################### mysql #######################
  mysql-5.7:
    image: mysql:5.7
    container_name: mysql-5.7
    restart: always
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/config/my.cnf:/etc/my.cnf:ro
      - ./mysql/init:/docker-entrypoint-initdb.d/
    environment:
      - TZ=Asia/Shanghai
      - MYSQL_ROOT_PASSWORD=rootpassword
    ports:
      - "3306:3306"

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: "phpmyadmin"
    restart: always
    ports:
      - "3307:80"
    environment:
      - PMA_ARBITRARY=1

  ####################### rocket #######################
  rocket-namesrv:
    image: foxiswho/rocketmq:4.8.0
    container_name: rocket-namesrv
    restart: always
    ports:
      - "9876:9876"
    volumes:
      - ./rocket/logs:/home/rocketmq/logs
      - ./rocket/store:/home/rocketmq/store
    environment:
      TZ: Asia/Shanghai
      JAVA_OPT_EXT: "-Duser.home=/home/rocketmq -Xms512M -Xmx512M -Xmn128m"
    command: sh mqnamesrv

  rocket-broker:
    image: foxiswho/rocketmq:4.8.0
    container_name: rocket-broker
    restart: always
    ports:
      - "10909:10909"
      - "10911:10911"
    volumes:
      - ./rocket/logs:/home/rocketmq/logs
      - ./rocket/store:/home/rocketmq/store
      - ./rocket/brokerconf/broker.conf:/etc/rocketmq/broker.conf #注:需修/rocket/brokerconf/broker.conf文件的brokerIP1才可生效
    environment:
      TZ: Asia/Shanghai
      NAMESRV_ADDR: "rocket-namesrv:9876"
      JAVA_OPTS: "-Duser.home=/opt"
      JAVA_OPT_EXT: "-Duser.home=/home/rocketmq -Xms512M -Xmx512M -Xmn128m"
    command: sh mqbroker -c /etc/rocketmq/broker.conf

  rocket-console:
    image: styletang/rocketmq-console-ng
    container_name: rocket-console
    restart: always
    ports:
      - "8180:8080"
    environment:
      TZ: Asia/Shanghai
      JAVA_OPTS: "-Drocketmq.namesrv.addr=rocket-namesrv:9876 -Dcom.rocketmq.sendMessageWithVIPChannel=false"

  ############################# redis #############################
  redis:
    image: redis:6
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    environment:
      TZ: Asia/Shanghai
      LANG: en_US.UTF-8
    volumes:
      # 配置文件
      - ./redis/conf/redis.conf:/usr/local/redis.conf
      # 数据文件
      - ./redis/data:/data
    command: [ "redis-server","/usr/local/redis.conf" ]

  ############################# ELK #############################
  elasticsearch:
    image: elasticsearch:7.12.0
    container_name: elasticsearch
    restart: always
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
    volumes:
      - ./es/data:/usr/share/elasticsearch/data
      - ./es/plugins:/usr/share/elasticsearch/plugins
    ports:
      - "9200:9200"
      - "9300:9300"

  kibana:
    image: kibana:7.12.0
    container_name: kibana
    restart: always
    ports:
      - "5601:5601"
    volumes:
      - ./es/config/kibana.yml:/usr/share/kibana/config/kibana.yml
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'

  logstash:
    image: logstash:7.12.0
    container_name: logstash
    restart: always
    volumes:
      - ./es/pipeline/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "9600:9600"
      - "5044:5044"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"

  ######################### canal ############################
  canal-server:
    image: canal/canal-server:v1.1.5
    container_name: canal-server
    restart: always
    ports:
      - "11110:11110"
      - "11111:11111"
      - "11112:11112"
      - "9100:9100"
    environment:
      - canal.instance.mysql.slaveId=200
      - canal.auto.scan=true
      - canal.destinations=system_log_request
      - canal.instance.master.address=mysql-5.7:3306
      - canal.instance.dbUsername=root
      - canal.instance.dbPassword=password
      - canal.instance.filter.regex=.*\\..*
    volumes:
      #- ./canal/conf/:/admin/canal-server/conf/
      - ./canal/server/logs/:/admin/canal-server/logs/

  canal-admin:
    image: canal/canal-admin:v1.1.5
    container_name: canal-admin
    restart: always
    ports:
      - "8089:8089"
    environment:
      - TZ=Asia/Shanghai
      - spring.datasource.address=mysql-5.7:3306
      - spring.datasource.database=canal_admin
      - spring.datasource.username=root
      - spring.datasource.password=password

  ######################### mongodb4.2.8 ############################
  mongodb:
    image: mongo:5.0
    container_name: mongodb
    volumes:
      - ./mongodb/db:/data/db
      - ./mongodb/log:/var/log/mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mongodbpassword

  mongo-express:
    image: mongo-express:0.54.0
    container_name: mongo-express
    restart: always
    ports:
      - "8181:8081"
    environment:
      ME_CONFIG_OPTIONS_EDITORTHEME: 3024-night
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: mongodbpassword
      ME_CONFIG_BASICAUTH_USERNAME: root
      ME_CONFIG_BASICAUTH_PASSWORD: rootpassword

  ####################### nacos #######################
  alibaba-nacos:
    image: nacos/nacos-server:1.4.2
    container_name: alibaba-nacos
    restart: always
    depends_on:
      - mysql-5.7
    environment:
      TZ: Asia/Shanghai
      PREFER_HOST_MODE: hostname          # 如果支持主机名可以使用hostname,否则使用ip,默认也是ip
      SPRING_DATASOURCE_PLATFORM: mysql   # 数据源平台 仅支持mysql或不保存empty
      MODE: standalone
      MYSQL_SERVICE_HOST: mysql-5.7
      MYSQL_SERVICE_DB_NAME: nacos
      MYSQL_SERVICE_PORT: 3306
      MYSQL_SERVICE_USER: root
      MYSQL_SERVICE_PASSWORD: rootpassword
      NACOS_APPLICATION_PORT: 8848
      # JVM_XMS: 512m
      # JVM_MMS: 320m
    volumes:
      - ./nacos/standalone-logs/:/home/nacos/logs
      - ./nacos/plugins/:/home/nacos/plugins
      - ./nacos/conf/application.properties:/home/nacos/conf/application.properties
    ports:
      - "8848:8848"

  ####################### seata #######################
  alibaba-seata:
    image: seataio/seata-server:1.4.2
    container_name: alibaba-seata
    restart: always
    ports:
      - "8091:8091"
    depends_on:
      - alibaba-nacos
    environment:
      - TZ=Asia/Shanghai
      - SEATA_IP=127.0.0.1                                        # 指定注册到nacos的IP,注意不同网络环境这里的IP也不同
      - SEATA_PORT=8091                                           # 指定注册到nacos的端口
      # - SEATA_CONFIG_NAME=file:/root/seata-config/registry      # 指定自定义的配置文件位置,直接挂载覆盖原配置文件就行,不需要设置
    volumes:
      - ./seata/conf/file.conf:/seata-server/resources/file.conf  # 使用file.conf配置时需要,如果使用nacos配置不需要挂载此文件
      - ./seata/conf/registry.conf:/seata-server/resources/registry.conf
      - ./seata/logs:/root/logs

  ####################### sentinel dashboard #######################
  alibaba-sentinel:
    image: bladex/sentinel-dashboard
    container_name: alibaba-sentinel
    restart: always
    ports:
      - "8858:8858"
    environment:
      TZ: Asia/Shanghai